{
  "openapi": "3.0.2",
  "info": {
    "title": "Book API Documentation",
    "description": "Starter Clean Architecture Express TypeScript TypeORM PostgreSQL",
    "contact": {
      "name": "Andry Pebrianto",
      "url": "https://andrypebrianto.netlify.app",
      "email": "andrypeb227@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/license/mit"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:5123",
      "description": "Dev"
    }
  ],
  "paths": {
    "/book": {
      "post": {
        "summary": "Create New Book",
        "tags": [
          "Book API"
        ],
        "description": "This endpoint is used to create new book data and save it to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "book earth": {
                  "description": "Create Novel Book Earth",
                  "value": {
                    "bookName": "Earth Strike",
                    "tags": [
                      "Planet",
                      "Fire"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Insert Book Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "priority": {
                      "type": "number",
                      "format": "int32"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "Success Insert",
                    "value": [
                      {
                        "id": 1,
                        "name": "Java",
                        "priority": 3,
                        "tags": [
                          "Java",
                          "Python"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "summary": "Get All Book",
        "tags": [
          "Book API"
        ],
        "description": "This endpoint is used to get all book data from the database",
        "responses": {},
        "security": [
          {
            "BookAuth": []
          }
        ]
      }
    },
    "/book/{id}": {
      "get": {
        "summary": "Get One Book",
        "tags": [
          "Book API"
        ],
        "description": "This endpoint is used to get one book data from the database based on the book id",
        "parameters": [
          {
            "$ref": "#/components/parameters/BookId"
          }
        ],
        "responses": {}
      },
      "put": {
        "summary": "Update One Book",
        "tags": [
          "Book API"
        ],
        "description": "This endpoint is used to update one book data from the database based on the book id",
        "parameters": [
          {
            "$ref": "#/components/parameters/BookId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookName": {
                    "type": "string",
                    "default": "Example Book Name (Update)"
                  }
                }
              }
            }
          }
        },
        "responses": {}
      },
      "delete": {
        "summary": "Delete One Book",
        "tags": [
          "Book API"
        ],
        "description": "This endpoint is used to delete one book data from the database based on the book id",
        "parameters": [
          {
            "$ref": "#/components/parameters/BookId"
          }
        ],
        "responses": {}
      }
    }
  },
  "components": {
    "parameters": {
      "BookId": {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Book id for get one",
        "schema": {
          "type": "string",
          "default": "008c07b1-b9f0-415d-996a-16eae0381c46"
        },
        "examples": {
          "uuid 1": {
            "description": "UUID Example 1",
            "value": "008c07b1-b9f0-415d-996a-16eae0381c46"
          },
          "uuid 2": {
            "description": "UUID Example 2",
            "value": "003c07b1-b9f0-415d-996a-16eae0381c43"
          }
        }
      }
    },
    "schemas": {
      "InsertBook": {
        "type": "object",
        "properties": {
          "bookName": {
            "type": "string",
            "default": "Example Book Name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "default": [
                "html",
                "css",
                "javascript"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BookAuth": {
        "description": "Auth For Book restful API",
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      },
      "MAMAMA": {
        "description": "Auth For Book restful API",
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}